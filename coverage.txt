Running on port 3000


  Business logic
    Checks page flow without authentication
      ✓ GET /dashboard
      ✓ GET /profile
    Checks page flow with authentication
      ✓ GET /dashboard (65ms)
      ✓ GET /profile
    Checks 404 with incorrect route
      ✓ GET /incorrect
    Checks authentication through signup
      ✓ POST /authenticate

  Database core methods
    User handling
      1) Fetching a user by email
{ Error: getaddrinfo ENOTFOUND mariadb_dummy mariadb_dummy:3308
    at PromiseConnection.execute (/home/brigitta/docker101/exam/examApp/node_modules/mysql2/promise.js:110:22)
    at Function.fetchUser (/home/brigitta/docker101/exam/examApp/models/user.js:3:341)
    at Context.done (/home/brigitta/docker101/exam/examApp/test/integration.spec.js:2:654)
    at callFnAsync (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runnable.js:394:21)
    at Test.Runnable.run (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runnable.js:338:7)
    at Runner.runTest (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:677:10)
    at /home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:801:12
    at next (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:594:14)
    at /home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:604:7
    at next (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:486:14)
    at Immediate.<anonymous> (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:572:5)
    at runCallback (timers.js:705:18)
    at tryOnImmediate (timers.js:676:5)
    at processImmediate (timers.js:658:5)
  message: 'getaddrinfo ENOTFOUND mariadb_dummy mariadb_dummy:3308',
  code: 'ENOTFOUND',
  errno: 'ENOTFOUND',
  sqlState: undefined,
  sqlMessage: undefined }
{ Error: getaddrinfo ENOTFOUND mariadb_dummy mariadb_dummy:3308
    at PromiseConnection.execute (/home/brigitta/docker101/exam/examApp/node_modules/mysql2/promise.js:110:22)
    at User.createUser (/home/brigitta/docker101/exam/examApp/models/user.js:3:483)
    at Context.done (/home/brigitta/docker101/exam/examApp/test/integration.spec.js:2:1216)
    at callFnAsync (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runnable.js:394:21)
    at Test.Runnable.run (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runnable.js:338:7)
    at Runner.runTest (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:677:10)
    at /home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:801:12
    at next (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:594:14)
    at /home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:604:7
    at next (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:486:14)
    at Immediate.<anonymous> (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:572:5)
    at runCallback (timers.js:705:18)
    at tryOnImmediate (timers.js:676:5)
    at processImmediate (timers.js:658:5)
  message: 'getaddrinfo ENOTFOUND mariadb_dummy mariadb_dummy:3308',
  code: 'ENOTFOUND',
  errno: 'ENOTFOUND',
  sqlState: undefined,
  sqlMessage: undefined }
      ✓ Creating a new user through model (1735ms)
User not created:  { Error: Can't add new command when connection is in closed state
    at PromiseConnection.execute (/home/brigitta/docker101/exam/examApp/node_modules/mysql2/promise.js:110:22)
    at Function.fetchUserById (/home/brigitta/docker101/exam/examApp/models/user.js:3:800)
    at Context.done (/home/brigitta/docker101/exam/examApp/test/integration.spec.js:2:1645)
    at callFnAsync (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runnable.js:394:21)
    at Test.Runnable.run (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runnable.js:338:7)
    at Runner.runTest (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:677:10)
    at /home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:801:12
    at next (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:594:14)
    at /home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:604:7
    at next (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:486:14)
    at Immediate.<anonymous> (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:572:5)
    at runCallback (timers.js:705:18)
    at tryOnImmediate (timers.js:676:5)
    at processImmediate (timers.js:658:5)
  message: 'Can\'t add new command when connection is in closed state',
  code: undefined,
  errno: undefined,
  sqlState: undefined,
  sqlMessage: undefined }
      2) Fetching a user by id
    Event handling
Events not retrieved:  { Error: Can't add new command when connection is in closed state
    at PromiseConnection.execute (/home/brigitta/docker101/exam/examApp/node_modules/mysql2/promise.js:110:22)
    at Function.fetchEvents (/home/brigitta/docker101/exam/examApp/models/event.js:2:871)
    at Context.done (/home/brigitta/docker101/exam/examApp/test/integration.spec.js:2:2163)
    at callFnAsync (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runnable.js:394:21)
    at Test.Runnable.run (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runnable.js:338:7)
    at Runner.runTest (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:677:10)
    at /home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:801:12
    at next (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:594:14)
    at /home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:604:7
    at next (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:486:14)
    at Immediate.<anonymous> (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:572:5)
    at runCallback (timers.js:705:18)
    at tryOnImmediate (timers.js:676:5)
    at processImmediate (timers.js:658:5)
  message: 'Can\'t add new command when connection is in closed state',
  code: undefined,
  errno: undefined,
  sqlState: undefined,
  sqlMessage: undefined }
      ✓ Fetching all events

  Database queries
    User handling
{ Error: Can't add new command when connection is in closed state
    at PromiseConnection.execute (/home/brigitta/docker101/exam/examApp/node_modules/mysql2/promise.js:110:22)
    at Context.done (/home/brigitta/docker101/exam/examApp/test/integration.spec.js:2:2813)
    at callFnAsync (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runnable.js:394:21)
    at Test.Runnable.run (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runnable.js:338:7)
    at Runner.runTest (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:677:10)
    at /home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:801:12
    at next (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:594:14)
    at /home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:604:7
    at next (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:486:14)
    at Immediate.<anonymous> (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:572:5)
    at runCallback (timers.js:705:18)
    at tryOnImmediate (timers.js:676:5)
    at processImmediate (timers.js:658:5)
  message: 'Can\'t add new command when connection is in closed state',
  code: undefined,
  errno: undefined,
  sqlState: undefined,
  sqlMessage: undefined }
      ✓ Retrieves user by email
    Event handling
{ Error: Can't add new command when connection is in closed state
    at PromiseConnection.execute (/home/brigitta/docker101/exam/examApp/node_modules/mysql2/promise.js:110:22)
    at Context.done (/home/brigitta/docker101/exam/examApp/test/integration.spec.js:2:3410)
    at callFnAsync (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runnable.js:394:21)
    at Test.Runnable.run (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runnable.js:338:7)
    at Runner.runTest (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:677:10)
    at /home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:801:12
    at next (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:594:14)
    at /home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:604:7
    at next (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:486:14)
    at Immediate.<anonymous> (/home/brigitta/docker101/exam/examApp/node_modules/mocha/lib/runner.js:572:5)
    at runCallback (timers.js:705:18)
    at tryOnImmediate (timers.js:676:5)
    at processImmediate (timers.js:658:5)
  message: 'Can\'t add new command when connection is in closed state',
  code: undefined,
  errno: undefined,
  sqlState: undefined,
  sqlMessage: undefined }
      ✓ Retrieves event by title

  Utility methods
    Checks recommendation algorithm retrieval
      ✓ User is a Backend Developer
      ✓ User is a Javascript Developer
    Checks data formatting for price
      ✓ Price conversion to include From
      ✓ Price conversion to include Not available
      ✓ Price conversion to include Free
      ✓ Price conversion to discard invalid strings
      ✓ Price conversion to discard invalid data types


  17 passing (6s)
  2 failing

  1) Database core methods
       User handling
         Fetching a user by email:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/home/brigitta/docker101/exam/examApp/test/integration.spec.js)
  

  2) Database core methods
       User handling
         Fetching a user by id:
     Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (/home/brigitta/docker101/exam/examApp/test/integration.spec.js)
  




=============================== Coverage summary ===============================
Statements   : 49.48% ( 284/574 )
Branches     : 21.43% ( 27/126 )
Functions    : 53.6% ( 67/125 )
Lines        : 49.56% ( 279/563 )
================================================================================
